# -*- coding: utf-8 -*-
"""capture-the-scene.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1shNXqswrVbLGVwDKuN7K6OPOEBuDqj6d

Mehrab Hossain Sajin
"""

# ‚¨ÜÔ∏è STEP 1: Upload the video
from google.colab import files
uploaded = files.upload()

import os
import cv2
import numpy as np
import matplotlib.pyplot as plt

# Get the uploaded file path
video_path = next(iter(uploaded))

# ‚õèÔ∏è STEP 2: Define function to process the video
def process_video_for_pano(video_path):
    # Make frame directory
    frame_dir = "/content/frames"
    os.makedirs(frame_dir, exist_ok=True)

    # Load video
    cap = cv2.VideoCapture(video_path)
    total = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
    print(f"Total frames in video: {total}")

    step = 10
    frames = []
    frame_id = 0

    while cap.isOpened():
        ret, frame = cap.read()
        if not ret:
            break
        if frame_id % step == 0:
            resized = cv2.resize(frame, (frame.shape[1] // 2, frame.shape[0] // 2))
            frames.append(resized)
        frame_id += 1

    cap.release()
    print(f"Extracted {len(frames)} frames.")

    # Stitch frames
    if len(frames) < 2:
        print("‚ùå Not enough frames to stitch.")
        return None

    stitcher = cv2.Stitcher_create()
    status, pano = stitcher.stitch(frames)

    if status == cv2.Stitcher_OK:
        output_path = "/content/panorama.jpg"
        cv2.imwrite(output_path, pano)
        pano_rgb = cv2.cvtColor(pano, cv2.COLOR_BGR2RGB)
        plt.figure(figsize=(20, 6))
        plt.imshow(pano_rgb)
        plt.axis('off')
        plt.title("Generated Panorama")
        plt.show()
        return output_path
    else:
        print("‚ùå Stitching failed with status:", status)
        return None

# üñºÔ∏è STEP 3: Run the function
output = process_video_for_pano(video_path)
print("Panorama saved at:", output)

